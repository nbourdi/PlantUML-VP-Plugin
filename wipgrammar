grammar PlantUMLDiagram;

// Entry point
diagram: '@startuml' element* '@enduml';


element: classDef
       | diamond
       | circle;

classDef: visibility? classType nameOrAlias stereotypes? '{' classBody? '}'   // Class with body
        | visibility? classType nameOrAlias stereotypes?;                     // Class without body

// Class types
classType: 'abstract'
         | 'abstract class'
         | 'annotation'
         | 'class'
         | 'entity'
         | 'enum'
         | 'exception'
         | 'interface'
         | 'metaclass'
         | 'protocol'
         | 'stereotype'
         | 'struct';
         
diamond: ('diamond' | '<>') nameOrAlias;

circle: ('circle' | '()') nameOrAlias;
		
classBody: (field | method)*;

field: (modifier | visibility | typeFirstField | nameFirstField)+;

// Field with type first
typeFirstField: type IDENTIFIER;

// Field with name first (default case)
nameFirstField: IDENTIFIER optionalType;

// Optional type definition
optionalType: (':' type)?;

// Method definition
method: (modifier | visibility | IDENTIFIER | '(' | parameters? | ')' | optionalType)+;

// Modifiers for fields and methods
modifier: '{' ('abstract' | 'static') '}';


nameOrAlias: (displayName 'as' aliasName)      // "name" as alias
         | (aliasName 'as' displayName)      // alias as "name"
         | displayName                       // Just a display name
         | aliasName;                        // Just an alias

displayName: TEXT;         // Name in quotes
aliasName: IDENTIFIER;            // Alias without quotes

visibility: '+' | '-' | '#' | '~';

stereotypes: stereotype (IGNORED_TEXT? stereotype)*; 

stereotype: '<<' .*? '>>';

type: IDENTIFIER;
IDENTIFIER: [a-zA-Z_][a-zA-Z0-9_]*; //LEGAL CHARS
IGNORED_TEXT: (~[<])+ -> skip; 
TEXT: '"' .*? '"';

// Skip whitespace and comments
WS: [ \t\r\n]+ -> skip;
COMMENT: '//' ~[\r\n]* -> skip;
